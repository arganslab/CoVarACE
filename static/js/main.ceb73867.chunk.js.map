{"version":3,"sources":["components/DataViewer.js","components/ViewerOptions.js","components/StructureViewer.js","components/VariantSelect.js","App.js","reportWebVitals.js","index.js"],"names":["DataViewer","props","state","vWidth","vHeight","updateDimensions","bind","decompositionData","this","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","className","Object","keys","length","data","type","x","resid","y","deltaG","layout","width","height","title","variant","Component","containerStyles","reprOptions","ViewerOptions","setRepr","repr","adjustThreshold","val","console","log","threshold","style","options","onChange","value","id","name","min","max","step","defaultValue","e","target","StructureViewer","changeRepr","mutatedRes","importantRes","stage","Stage","blobComplex","Blob","loadFile","ext","then","comp","addRepresentation","multipleBond","variantOptions","require","customStyles","option","provided","themeColor","chroma","backgroundColor","isSelected","css","isFocused","alpha","color","isDisabled","geoFilterOption","inputValue","label","otherKey","filter","opt","continent","toUpperCase","country","normalize","replace","includes","VariantSelect","handleChange","selectedOption","handleVariantSelect","filterOption","isClearable","styles","theme","borderRadius","colors","primary","App","selection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ceb73867.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\n\nimport './DataViewer.css';\n\n\nexport default class DataViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            vWidth: 0,\n            vHeight: 0,\n        }\n\n        this.updateDimensions = this.updateDimensions.bind(this);\n        this.decompositionData = {};\n    }\n\n    componentDidMount() {\n        // uncomment when data is ready\n        //this.decompositionData = require(`../data/decomposition/${this.props.variant}.json`);\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n\n    updateDimensions() {\n        this.setState({ vWidth: window.innerWidth, vHeight: window.innerHeight });\n    }\n\n    render() {\n        return (\n            <div className=\"plot-container\">\n                {\n                (\n                    Object.keys(this.decompositionData).length > 0\n                    && this.state.vWidth > 0 \n                    && this.state.vHeight > 0\n                )\n                ?    <Plot\n                        data={[\n                            {\n                                type: 'bar', \n                                x: this.decompositionData.resid, \n                                y: this.decompositionData.deltaG\n                            },\n                        ]}\n                        layout={ {\n                            width: 0.4 * this.state.vWidth, \n                            height: 0.6 * this.state.vHeight, \n                            title: `Decomposition Analysis: ${this.props.variant}`\n                        } }\n                    />\n                : <h4>Please select another structure.</h4>\n                }\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nimport './ViewerOptions.css';\n\n\n// because the css class wasn't working for some reason\nconst containerStyles = {\n    'color': 'white',\n    'paddingTop': '2vh',\n    'display': 'flex',\n    'flexDirection': 'row',\n    'alignItems': 'center',\n    'justifyContent': 'flex-start',\n    'fontWeight': '600',\n};\n\nconst reprOptions = ['Ribbon', 'Ball + Stick', 'Licorice', 'Cartoon'];\n\nexport default class ViewerOptions extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            repr: 'ribbon',\n            threshold: -1,\n        };\n\n        this.setRepr = this.setRepr.bind(this);\n        this.adjustThreshold = this.adjustThreshold.bind(this);\n    }\n\n    setRepr = repr => {\n        this.setState({ repr });\n    }\n\n    adjustThreshold = val => {\n        console.log(val);\n        if (val !== null) {\n            this.setState({ threshold: val });\n        }\n    }\n\n    render() {\n        return (\n            <div style={containerStyles}>\n                <div className=\"repr-option\">\n                    <Dropdown options={reprOptions} onChange={this.setRepr} value={reprOptions[0]} />\n                </div>\n                <div className=\"threshold-option\">\n                    <div id=\"threshold-display\">\n                        <p>Threshold: {this.state.threshold} kcal mol<sup>-1</sup></p>\n                    </div>\n                    <input \n                        type=\"range\" \n                        name=\"threshold\" \n                        min=\"-5\" \n                        max=\"5\" \n                        step=\"0.1\"\n                        defaultValue=\"-1\"  \n                        onChange={e => this.adjustThreshold(e.target.value)}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Stage } from 'ngl';\nimport raw from 'raw.macro';\n\nimport ViewerOptions from './ViewerOptions';\nimport './StructureViewer.css';\n\nexport default class StructureViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mutatedRes: [],\n            importantRes: [],\n            threshold: 1,\n            repr: 'ribbon',\n        }\n\n        this.stage = null;\n        this.changeRepr = this.changeRepr.bind(this);\n    }\n\n    componentDidMount() {\n        this.stage = new Stage('viewport');\n        const pdbData = raw('../data/structures/SARSCOV2_g_dry.pdb');\n        const blobComplex = new Blob([ pdbData ], { type: 'text/plain' });\n        this.stage.loadFile( blobComplex, { ext: \"pdb\" } ).then( comp => {\n            comp.addRepresentation( \"ribbon\", { multipleBond: true } );\n        } );\n    }\n\n    changeRepr = repr => {\n        this.setState({ repr });\n    };\n\n    // add logic to stage to update on resize\n\n    //componentDidUpdate(prevProps) {\n    //    if (prevProps.variant !== this.props.variant) {\n    //        if (this.props.variant === '1crn') {\n    //            this.stage.loadFile( \"rcsb://1crn\", { defaultRepresentation: true } );\n    //        } else if (this.props.variant === 'WT') {\n    //            let pdbSPIKE = '';\n    //            let pdbACE2 = '';\n    //            fetch('../data/structures/RBD_SARSCoV2_SPIKE.pdb')\n    //            .then((r) => r.text())\n    //            .then((text) => {\n    //                pdbSPIKE = text;\n    //            });\n    //            fetch('../data/structures/ACE2_glycosylated.pdb')\n    //            .then((r) => r.text())\n    //            .then((text) => {\n    //                pdbACE2 = text;\n    //            });\n    //            \n    //            const blobSPIKE = new Blob( [ pdbSPIKE ], { type: 'text/plain'} );\n    //            this.stage.loadFile( blobSPIKE, { ext: \"pdb\" } );\n    //            const blobACE2 = new Blob( [ pdbACE2 ], { type: 'text/plain'} );\n    //            this.stage.loadFile( blobACE2, { ext: \"pdb\" } );\n    //            //this.stage.loadFile( \"rcsb://1crn\", { defaultRepresentation: true } );\n    //            //this.stage.loadFile( \"rcsb://1crn\", { defaultRepresentation: true } );\n    //        }\n    //    }\n    //}\n\n    render() {\n        return (\n            <div>\n                <div className=\"viewer-container\">\n                    <div id=\"viewport\" className=\"viewer-canvas\"></div>\n                </div>\n                <ViewerOptions changeRepr={this.changeRepr} />\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport chroma from 'chroma-js';\n\nimport './VariantSelect.css';\n\n\n// check N501Y continent\n// deal with multiple origins: L452M, N501Y, S494P, P330S, S477N, A520S, E484Q, A348S, N481K, V362F\n// note acronyms or special: USA, England\nconst variantOptions = require('../data/variantList.json');\n\nconst customStyles = {\n  option: (provided, state) => {\n    const themeColor = chroma('#65ccb8');\n    return {\n      ...provided,\n      backgroundColor: state.isSelected \n        ? themeColor.css() \n        : state.isFocused\n        ? themeColor.alpha(0.2).css()\n        : 'white',\n      color: '#1e1e1e',\n      ':active': {\n        ...provided[':active'],\n        backgroundColor: !state.isDisabled \n          && (state.isSelected ? themeColor.css() : themeColor.alpha(0.4).css()),\n      },\n    }\n  },\n}\n\nconst geoFilterOption = (option, inputValue) => {\n  const { label, value } = option;\n  const otherKey = variantOptions.filter(\n    opt => opt.label === label \n      && (opt.continent.toUpperCase() === inputValue.toUpperCase()\n        || opt.country.toUpperCase() === inputValue.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").toUpperCase())\n  );\n  return label.includes(inputValue) || value.includes(inputValue) || otherKey.length > 0;\n};\n\nexport default class VariantSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = selectedOption => {\n    if (selectedOption != null) {\n      this.props.handleVariantSelect(selectedOption.value);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"variant-select\">\n        <p>Select a variant:</p>\n        <div>\n          <Select \n            options={variantOptions} \n            filterOption={geoFilterOption}\n            defaultValue={variantOptions[0]}\n            onChange={this.handleChange}\n            isClearable\n            styles={customStyles}\n            theme={theme => ({\n              ...theme,\n              borderRadius: 2,\n              colors: {\n                ...theme.colors,\n                primary: '#65ccb8',\n              },\n            })}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport DataViewer from './components/DataViewer';\nimport StructureViewer from './components/StructureViewer';\nimport VariantSelect from './components/VariantSelect';\nimport './App.css';\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      variant: 'WT',\n    };\n\n    this.handleVariantSelect = this.handleVariantSelect.bind(this);\n  }\n\n  handleVariantSelect(variant) {\n    this.setState({ variant });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-info\">\n          <h2>\n            About\n          </h2>\n          <ul>\n            <li>add instructions/info here</li>\n          </ul>\n        </div>\n        <VariantSelect \n          handleVariantSelect={(selection) => this.handleVariantSelect(selection) }\n        />\n        <div className=\"data-container\">\n          <StructureViewer \n            variant={this.state.variant}\n          />\n          <DataViewer \n            variant={this.state.variant} \n          />\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}