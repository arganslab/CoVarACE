{"version":3,"sources":["data/decomposition sync /^/.//DECOMP_.*/.json$","components/DataViewer.js","assets/CFREF_logo.png","assets/CC_logo.png","assets/uwaterloo_logo.png","components/Footer.js","assets/heading_1024.png","components/Header.js","components/ViewerOptions.js","components/StructureViewer.js","components/VariantSelect.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","DataViewer","props","state","decompositionData","updateDecompositionData","bind","this","prevProps","variant","setState","require","plotTitleFragment","dataExists","length","hoverText","resids","elem","i","resnames","structure","className","vWidth","vHeight","data","type","x","y","totals","averages","hoverinfo","text","layout","width","height","title","Math","round","binding_affinity","average","xaxis","zeroline","autotick","ticks","tick0","dtick","showgrid","showline","rangemode","autorange","yaxis","exponentformat","Component","Footer","icon","faBuilding","faMapMarkerAlt","faEnvelope","href","target","rel","faExternalLinkAlt","src","cfrefLogo","alt","ccLogo","institutionLogo","Header","headerLogo","containerStyles","reprOptions","ViewerOptions","setRepr","repr","value","changeRepr","toLowerCase","replace","adjustThreshold","val","threshold","style","options","onChange","name","min","max","step","defaultValue","StructureViewer","mutatedRes","importantRes","stage","Stage","backgroundColor","blobComplex","Blob","loadFile","ext","then","comp","addRepresentation","multipleBond","autoView","prevState","eachComponent","removeAllRepresentations","handleResize","variantOptions","customStyles","option","provided","themeColor","chroma","isSelected","css","isFocused","alpha","color","isDisabled","geoFilterOption","inputValue","label","otherKey","filter","opt","continent","toUpperCase","country","normalize","includes","VariantSelect","handleChange","selectedOption","handleVariantSelect","filterOption","isClearable","styles","theme","borderRadius","colors","primary","App","updateDimensions","window","addEventListener","removeEventListener","innerWidth","innerHeight","selection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b497e11e.chunk.js","sourcesContent":["var map = {\n\t\"./DECOMP_A348S.json\": 46,\n\t\"./DECOMP_A475V.json\": 47,\n\t\"./DECOMP_A520S.json\": 48,\n\t\"./DECOMP_A522S.json\": 49,\n\t\"./DECOMP_A522V.json\": 50,\n\t\"./DECOMP_E406D.json\": 51,\n\t\"./DECOMP_E471G.json\": 52,\n\t\"./DECOMP_E484A.json\": 53,\n\t\"./DECOMP_E484Q.json\": 54,\n\t\"./DECOMP_F338L.json\": 55,\n\t\"./DECOMP_F490S.json\": 56,\n\t\"./DECOMP_F490V.json\": 57,\n\t\"./DECOMP_Glycosylated.json\": 58,\n\t\"./DECOMP_I410V.json\": 59,\n\t\"./DECOMP_I468T.json\": 60,\n\t\"./DECOMP_K417N.json\": 61,\n\t\"./DECOMP_L452M.json\": 62,\n\t\"./DECOMP_L461F.json\": 63,\n\t\"./DECOMP_N354S.json\": 64,\n\t\"./DECOMP_N439K.json\": 65,\n\t\"./DECOMP_N440K.json\": 66,\n\t\"./DECOMP_N481K.json\": 67,\n\t\"./DECOMP_N501T.json\": 68,\n\t\"./DECOMP_N501Y.json\": 69,\n\t\"./DECOMP_Nonglycosylated.json\": 70,\n\t\"./DECOMP_P330S.json\": 71,\n\t\"./DECOMP_P384L.json\": 72,\n\t\"./DECOMP_P384S.json\": 73,\n\t\"./DECOMP_P479S.json\": 74,\n\t\"./DECOMP_P499L.json\": 75,\n\t\"./DECOMP_P521R.json\": 76,\n\t\"./DECOMP_R346S.json\": 77,\n\t\"./DECOMP_R357K.json\": 78,\n\t\"./DECOMP_R408K.json\": 79,\n\t\"./DECOMP_S359N.json\": 80,\n\t\"./DECOMP_S373L.json\": 81,\n\t\"./DECOMP_S477I.json\": 82,\n\t\"./DECOMP_S477N.json\": 83,\n\t\"./DECOMP_S494D.json\": 84,\n\t\"./DECOMP_S494P.json\": 85,\n\t\"./DECOMP_T478I.json\": 86,\n\t\"./DECOMP_V327I.json\": 87,\n\t\"./DECOMP_V362F.json\": 88,\n\t\"./DECOMP_V382L.json\": 89,\n\t\"./DECOMP_V534F.json\": 90,\n\t\"./DECOMP_V534I.json\": 91\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 45;","import React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\n\nimport './DataViewer.css';\n\n\nexport default class DataViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            decompositionData: {}, \n        }\n\n        this.updateDecompositionData = this.updateDecompositionData.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateDecompositionData();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.variant !== this.props.variant) {\n            this.updateDecompositionData();\n        }\n    }\n\n    updateDecompositionData() {\n        if (this.props.variant === 'E484K') {\n            this.setState({ decompositionData: {} });\n        } else {\n            const decompositionData = require(`../data/decomposition/DECOMP_${this.props.variant}.json`);\n            this.setState({ decompositionData });\n        }\n    }\n\n    render() {\n        let plotTitleFragment = this.props.variant;\n        if (this.props.variant === 'Nonglycosylated') {\n            plotTitleFragment = 'Non-Glycosylated WT';\n        } else if (this.props.variant === 'Glycosylated') {\n            plotTitleFragment = 'Glycosylated WT';\n        }\n\n        const dataExists = Object.keys(this.state.decompositionData).length > 0;\n\n        let hoverText = [];\n        if (dataExists) {\n            hoverText = this.state.decompositionData.resids.map(\n                (elem, i) => `${this.state.decompositionData.resnames[i]}${elem} (${this.state.decompositionData.structure[i]})`\n            );\n        }\n\n        return (\n            <div>\n                <div className=\"plot-container\">\n                    {\n                    (\n                        dataExists \n                        && this.props.vWidth > 0 \n                        && this.props.vHeight > 0\n                    )\n                    ?    <Plot\n                            data={[\n                                {\n                                    type: 'bar', \n                                    x: this.state.decompositionData.resids, \n                                    y: this.state.decompositionData.totals.averages, \n                                    hoverinfo: 'text+y', \n                                    text: hoverText, \n                                },\n                            ]}\n                            layout={ {\n                                width: 0.4 * this.props.vWidth, \n                                height: 0.6 * this.props.vHeight, \n                                title: `Per-Residue Free Energy Decomposition: ${plotTitleFragment}<br><span style=\"font-size: 14\">Binding Affinity (\\u0394G) = ${Math.round(this.state.decompositionData.binding_affinity.average * 100) / 100}</span>`, \n                                xaxis: {\n                                    zeroline:false, \n                                    title: 'Residue ID', \n                                    autotick: false, \n                                    ticks: 'outside', \n                                    tick0: 0, \n                                    dtick: 50, \n                                    showgrid: true, \n                                    showline: true, \n                                    rangemode: 'tozero', \n                                    autorange: true, \n                                },\n                                yaxis: {\n                                    zeroline:false, \n                                    title: 'Energy Contribution (kcal/mol)', \n                                    ticks: 'outside', \n                                    showgrid: true, \n                                    showline: true, \n                                    exponentformat: 'e', \n                                }, \n                            } }\n                        />\n                    : <h4>Please select another structure.</h4>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n","export default __webpack_public_path__ + \"static/media/CFREF_logo.1e219b9f.png\";","export default __webpack_public_path__ + \"static/media/CC_logo.614ac537.png\";","export default __webpack_public_path__ + \"static/media/uwaterloo_logo.9c5bbc4c.png\";","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBuilding, faEnvelope } from '@fortawesome/free-regular-svg-icons'\nimport { faMapMarkerAlt, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport './Footer.css';\nimport cfrefLogo from '../assets/CFREF_logo.png';\nimport ccLogo from '../assets/CC_logo.png';\nimport institutionLogo from '../assets/uwaterloo_logo.png';\n\nexport default function Footer() {\n    return (\n        <div className='footer'>\n            <div className='footer-main'>\n                <div className='footer-info'>\n                <p>© ArGan's Lab</p>\n                <p><FontAwesomeIcon icon={faBuilding} /> School of Pharmacy, University of Waterloo</p>\n                <p><FontAwesomeIcon icon={faMapMarkerAlt} /> 10 Victoria St S A, Kitchener, ON, Canada</p>\n                <p><FontAwesomeIcon icon={faEnvelope} /> <a href='mailto:aravindhan.ganesan@uwaterloo.ca'>Aravindhan Ganesan</a></p>\n                </div>\n                <div className='footer-info'>\n                    <p>© <a href='https://www.skalyaanamoorthy.com/' target='_blank' rel='noreferrer'>SK Lab <FontAwesomeIcon icon={faExternalLinkAlt} /></a></p>\n                    <p><FontAwesomeIcon icon={faBuilding} /> Department of Chemistry, University of Waterloo</p>\n                    <p><FontAwesomeIcon icon={faMapMarkerAlt} /> 200 University Ave W, Waterloo, ON, Canada</p>\n                    <p><FontAwesomeIcon icon={faEnvelope} /> <a href='mailto:subhak@uwaterloo.ca'>Subha Kalyaanamoorthy</a></p>\n                </div>\n                <div className='footer-acknowledgements'>\n                    <img src={cfrefLogo} alt='Canada First Research Fund logo' className='footer-logo' />\n                    <img src={ccLogo} alt='Compute Canada logo' className='footer-logo' />\n                    <div className='v-line'></div>\n                    <img src={institutionLogo} alt='University of Waterloo logo' className='footer-logo' />\n                </div>\n            </div>\n            <div className='footer-contrib'>\n                <p>\n                    Contributors: Faris Fizal, Anh Do, Subha Kalyaanamoorthy, Aravindhan Ganesan.\n                </p>\n            </div>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/heading_1024.4fd3a08c.png\";","import './Header.css';\nimport headerLogo from '../assets/heading_1024.png';\n\nexport default function Header() {\n    return (\n        <div className='header'>\n            <img src={headerLogo} alt='CoVarACE logo' className='header-logo' />\n            <h2 className='header-desc'><b>C</b>OVID19 <b>V</b>ariants-<b>ACE</b>2 Predicted Binding Affinity Database</h2>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nimport './ViewerOptions.css';\n\n\n// because the css class wasn't working for some reason\nconst containerStyles = {\n    'color': 'white',\n    'paddingTop': '2vh',\n    'display': 'flex',\n    'flexDirection': 'row',\n    'alignItems': 'center',\n    'justifyContent': 'flex-start',\n    'fontWeight': '600',\n};\n\nconst reprOptions = ['Ribbon', 'Ball + Stick', 'Licorice', 'Cartoon'];\n\nexport default class ViewerOptions extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //repr: 'ribbon',\n            threshold: -1,\n        };\n\n        this.setRepr = this.setRepr.bind(this);\n        this.adjustThreshold = this.adjustThreshold.bind(this);\n    }\n\n    setRepr = repr => {\n        //this.setState({ repr: repr.toLowerCase() });\n        if (repr.value !== null) {\n            this.props.changeRepr(repr.value.toLowerCase().replace(/\\s/g, ''));\n        }\n    }\n\n    adjustThreshold = val => {\n        if (val !== null) {\n            this.setState({ threshold: val });\n        }\n    }\n\n    render() {\n        return (\n            <div style={containerStyles}>\n                <div className=\"repr-option\">\n                    <Dropdown options={reprOptions} onChange={this.setRepr} value={reprOptions[0]} />\n                </div>\n                <div className=\"threshold-option\">\n                    <div id=\"threshold-display\">\n                        <p>Threshold: {this.state.threshold} kcal mol<sup>-1</sup></p>\n                    </div>\n                    <input \n                        type=\"range\" \n                        name=\"threshold\" \n                        min=\"-5\" \n                        max=\"5\" \n                        step=\"0.1\"\n                        defaultValue=\"-1\"  \n                        onChange={e => this.adjustThreshold(e.target.value)}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Stage } from 'ngl';\nimport raw from 'raw.macro';\n\nimport ViewerOptions from './ViewerOptions';\nimport './StructureViewer.css';\n\nexport default class StructureViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mutatedRes: [],\n            importantRes: [],\n            threshold: 1,\n            repr: 'ribbon',\n        }\n\n        this.stage = null;\n        this.changeRepr = this.changeRepr.bind(this);\n    }\n\n    componentDidMount() {\n        this.stage = new Stage('viewport', { backgroundColor: \"white\" });\n        const pdbData = raw('../data/structures/SARSCOV2_g_dry.pdb');\n        const blobComplex = new Blob([ pdbData ], { type: 'text/plain' });\n        this.stage.loadFile( blobComplex, { ext: \"pdb\" } ).then( comp => {\n            comp.addRepresentation( \"ribbon\", { multipleBond: true });\n            comp.autoView();\n        } );\n    }\n\n    changeRepr = repr => {\n        this.setState({ repr });\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.variant !== this.props.variant) {\n            // need to add highlighting\n        }\n        if (prevState.repr !== this.state.repr) {\n            this.stage.eachComponent(comp => {\n                comp.removeAllRepresentations();\n                comp.addRepresentation(this.state.repr, { multipleBond: true });\n            });\n        }\n        // logic for stage to update on resize\n        if (prevProps.vWidth !== this.props.vWidth || prevProps.vHeight !== this.props.vHeight) {\n            this.stage.handleResize();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"viewer-container\">\n                    <div id=\"viewport\" className=\"viewer-canvas\"></div>\n                </div>\n                <ViewerOptions changeRepr={this.changeRepr} />\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport chroma from 'chroma-js';\n\nimport './VariantSelect.css';\n\n\n// check N501Y continent\n// deal with multiple origins: L452M, N501Y, S494P, P330S, S477N, A520S, E484Q, A348S, N481K, V362F\n// note acronyms or special: USA, England\nconst variantOptions = require('../data/variantList.json');\n\nconst customStyles = {\n  option: (provided, state) => {\n    const themeColor = chroma('#ff4040'); //#65ccb8\n    return {\n      ...provided,\n      backgroundColor: state.isSelected \n        ? themeColor.css() \n        : state.isFocused\n        ? themeColor.alpha(0.2).css()\n        : 'white',\n      color: '#1e1e1e',\n      ':active': {\n        ...provided[':active'],\n        backgroundColor: !state.isDisabled \n          && (state.isSelected ? themeColor.css() : themeColor.alpha(0.4).css()),\n      },\n    }\n  },\n}\n\nconst geoFilterOption = (option, inputValue) => {\n  const { label, value } = option;\n  const otherKey = variantOptions.filter(\n    opt => opt.label === label \n      && (opt.continent.toUpperCase() === inputValue.toUpperCase()\n        || opt.country.toUpperCase() === inputValue.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").toUpperCase())\n  );\n  return label.includes(inputValue) || value.includes(inputValue) || otherKey.length > 0;\n};\n\nexport default class VariantSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = selectedOption => {\n    if (selectedOption != null) {\n      this.props.handleVariantSelect(selectedOption.value);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"variant-select\">\n        <p>Select a variant:</p>\n        <div>\n          <Select \n            options={variantOptions} \n            filterOption={geoFilterOption}\n            defaultValue={variantOptions[0]}\n            onChange={this.handleChange}\n            isClearable\n            styles={customStyles}\n            theme={theme => ({\n              ...theme,\n              borderRadius: 2,\n              colors: {\n                ...theme.colors,\n                primary: '#ff4040', //#65ccb8\n              },\n            })}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport DataViewer from './components/DataViewer';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport StructureViewer from './components/StructureViewer';\nimport VariantSelect from './components/VariantSelect';\nimport './App.css';\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      variant: 'Nonglycosylated',\n      vWidth: 0, \n      vHeight: 0, \n    };\n\n    this.handleVariantSelect = this.handleVariantSelect.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  handleVariantSelect(variant) {\n    this.setState({ variant });\n  }\n\n  updateDimensions() {\n    this.setState({ vWidth: window.innerWidth, vHeight: window.innerHeight });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"App-info\">\n          <h2>\n            About\n          </h2>\n          <p>\n            Coronavirus pandemic caused by the severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) \n            remains a serious health concern for human population and has already resulted in over \n            2.5 million deaths worldwide. While a few RNA-based vaccines have been developed and the \n            preparation to vaccinate the global human population is underway, the emergence of numerous \n            SARS-CoV-2 variants across the globe is posing new challenges in tackling the ongoing pandemic. \n            Especially, mutations in the receptor binding domain (RBD) on the spike protein of SARS-CoV-2 may \n            have a larger impact due to their critical role in recognition of human angiotensin-converting enzyme 2 (ACE2) \n            for inducing the viral infection. Therefore, our team is focused on building atomistic models of the \n            SARS-CoV-2 RBD variants and understanding their impacts on the specific molecular interactions of \n            spike RBD with human ACE2. CoVarACE is a database that disseminates the qualitative and quantitative \n            insights gained from our scientific efforts.\n          </p>\n          <br />\n          <p>\n            <i>\n              Disclaimer: The goal of this database is to share our new knowledge as they are gained to promote COVID-19 research. \n              The research is still not peer-reviewed and will be shortly submitted for publication in a suitable journal.\n            </i>\n          </p>\n          {\n            false &&\n            <ul>\n              <li>Select a variant from the dropdown below to view its associated per-residue free energy decomposition.</li>\n              <li>Filter variants by country or continent by typing in the variant dropdown/search bar.</li>\n              <li>Use mouse or trackpad controls to interact with the structure visualization viewport.</li>\n              <li>Use the available toggles on the free energy decomposition plot to highlight specific data points and save the plot to an image.</li>\n              <li>Customize the representation of the Spike-ACE2 complex through the representation dropdown.</li>\n              <li>[in development] Adjust the threshold to view key residues with an energy contribution below this value.</li>\n            </ul>\n          }\n          <br />\n          <p>\n            If any information from this database is used for research purposes, please cite the following source:\n          </p>\n          <br />\n          <p>\n            <i>\n              Fizal F., Do Le, D.L., Kalyaanamoorthy, S, Ganesan, A, \n              “CoVarACE - an online repository describing the effects of spike mutations on \n              human ACE2 recognition by SARS-CoV-2 variants assessed using in silico analyses”, \n              University of Waterloo-School of Pharmacy Research Day 2021, 5-May-2021.\n            </i>\n          </p>\n          <br />\n          <p>\n            For more information contact: Dr. Ganesan (a.ganesan@uwaterloo.ca); Dr. Kalyaanamoorthy (subha.kalyaanamoorthy@uwaterloo.ca).\n          </p>\n        </div>\n        <VariantSelect \n          handleVariantSelect={(selection) => this.handleVariantSelect(selection) }\n        />\n        <div className=\"data-container\">\n          <StructureViewer \n            variant={this.state.variant} \n            vWidth={this.state.vWidth} \n            vHeight={this.state.vHeight} \n          />\n          <DataViewer \n            variant={this.state.variant} \n            vWidth={this.state.vWidth} \n            vHeight={this.state.vHeight} \n          />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}